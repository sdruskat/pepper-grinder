<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
    <groupId>net.sdruskat.peppergrinder</groupId>
    <artifactId>net.sdruskat.peppergrinder.doc</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  <name>Pepper Grinder Documentation</name>
  <description>Developer documentation and API</description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <site.path>doc-snapshot</site.path>
    <!-- override in your settings -->
    <siteMainDirectory>${user.home}</siteMainDirectory>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    <maven-site-plugin.version>3.6</maven-site-plugin.version>
    <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
    <exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
    <docbkx-maven-plugin.version>2.0.17</docbkx-maven-plugin.version>
    <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
  </properties>
  <build>
    <plugins>
      <!-- start: maven site plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven-site-plugin.version}</version>
        <configuration>
          <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>${maven-project-info-reports-plugin.version}</version>
              <configuration>
                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
              </configuration>
              <reports>
                <report>index</report>
                <report>summary</report>
                <report>license</report>
              </reports>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
      <!-- end: maven site plugin -->
    </plugins>
    <!-- start docs -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-publish-plugin</artifactId>
          <version>${maven-scm-publish-plugin.version}</version>
          <extensions>true</extensions>
          <configuration>
            <!--<pubScmUrl>scm:git:ssh://git@github.com:korpling/salt.git</pubScmUrl><scmBranch>gh-pages</scmBranch>-->
            <content>${project.build.directory}/doxygen/</content>
            <ignorePathsToDelete>
              <path>doc</path>
              <path>${site.path}</path>
              <path>index.html</path>
              <path>doxygen_sqlite3.db</path>
              <path>.gitignore</path>
            </ignorePathsToDelete>
            <tryUpdate>true</tryUpdate>
            <checkoutDirectory>${scmPubCheckoutDirectory}</checkoutDirectory>
            <checkinComment>update documentation for version
              ${project.version} (${site.path})
              Original revision is
              ${buildNumber}.</checkinComment>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <!-- end doxygen -->
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <site.path>doc</site.path>
      </properties>
    </profile>
    <!-- preview releases still push their documentation to doc snapshot -->
    <profile>
      <id>preview</id>
      <properties>
        <site.path>${site.path}</site.path>
      </properties>
    </profile>
    <profile>
      <id>docs</id>
      <build>
        <plugins>

          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>${maven-clean-plugin.version}</version>
            <executions>
              <!-- Remove old Eclipse help files from .Pepper Grinder/doc/help -->
              <execution>
                <id>remove-old-eclipse-help</id>
                <!-- PHASE: CLEAN -->
                <phase>clean</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <filesets>
                    <fileset>
                      <directory>${project.basedir}/../../bundles/net.sdruskat.peppergrinder.rcp/doc/help/</directory>
                      <includes>
                        <include>**/*</include>
                      </includes>
                      <excludes>
                        <exclude>README.txt</exclude>
                      </excludes>
                    </fileset>
                  </filesets>
                </configuration>
              </execution>
              <!-- Delete the huge doxygen_sqlite3.db file if it exists -->
              <execution>
                <id>remove-doxygen-sqlitedb</id>
                <!-- PHASE: PREPARE-PACKAGE -->
                <phase>prepare-package</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <excludeDefaultDirectories>true</excludeDefaultDirectories>
                  <filesets>
                    <fileset>
                      <directory>${project.build.directory}/doxygen/</directory>
                      <includes>
                        <include>**/doxygen_sqlite3.db</include>
                      </includes>
                    </fileset>
                  </filesets>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Build user docs with pandoc -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${exec-maven-plugin.version}</version>
            <executions>
              <!-- Build user doc DocBook from Markdown via pandoc -->
              <execution>
                <id>merge</id>
                <!-- PHASE: GENERATE-SOURCES -->
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>pandoc</executable>
                  <arguments>
                    <argument>-s</argument>
                      <!-- Add Markdown documents to be compiled in the right order as arguments.
                      One file per argument! -->
                    <argument>${project.basedir}/src/main/pandoc/01-introduction.md</argument>
                    <argument>-o</argument>
                    <argument>${project.basedir}/src/main/pandoc/documentation.md</argument>
                    <!-- Hack: misuse author metadate to display in all versions), Markdown source uses date metadate for author name -->
                    <argument>-M</argument>
                    <argument>author=&quot;Version ${project.version} (${timestamp})&quot;</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>build-docbook</id>
                <!-- PHASE: GENERATE-SOURCES -->
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>pandoc</executable>
                  <arguments>
                    <argument>-s</argument>
                    <argument>-S</argument>
                    <argument>-f</argument>
                    <argument>markdown+yaml_metadata_block</argument>
                    <argument>-t</argument>
                    <argument>docbook</argument>
                    <argument>${project.basedir}/src/main/pandoc/documentation.md</argument>
                    <!-- end Markdown documents -->
                    <argument>-o</argument>
                    <argument>${project.basedir}/src/main/docbook/index.xml</argument>
                    <!-- Hack: misuse author metadate to display in all versions), Markdown source uses date metadate for author name -->
                    <argument>-M</argument>
                    <argument>author=&quot;Version ${project.version} (${timestamp})&quot;</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Build user doc PDF from Markdown via pandoc -->
              <execution>
                <id>build-pdf</id>
                <!-- PHASE: GENERATE-SOURCES -->
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>pandoc</executable>
                  <arguments>
                    <argument>-s</argument>
                    <argument>-S</argument>
                    <argument>-f</argument>
                    <argument>markdown+yaml_metadata_block</argument>
                    <argument>${project.basedir}/src/main/pandoc/documentation.md</argument>
                    <!-- end Markdown documents -->
                    <argument>-o</argument>
                    <argument>${basedir}/src/main/resources/pepper-grinder-user-guide.pdf</argument>
                    <!-- Hack: misuse author metadate to display in all versions), Markdown source uses date metadate for author name -->
                    <argument>-M</argument>
                    <argument>author=&quot;Version ${project.version} (${timestamp})&quot;</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Use the Doxygen sources with replaces variables to generate developer docs -->
              <!-- Build developer documentation with Doxygen -->
              <execution>
                <id>build-doxygen</id>
                <!-- PHASE: COMPILE -->
                <phase>compile</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>doxygen</executable>
                  <workingDirectory>${project.build.directory}/doxygen/</workingDirectory>
                  <arguments>
                    <argument>${project.build.directory}/doxygen-generated/Doxyfile</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Fix Eclipse Help's toc.xml to point to correct path -->
              <execution>
                <id>fix-paths-in-toc.xml</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.basedir}/src/main/docbook/clean-toc.sh</executable>
                  <arguments>
                    <argument>${project.basedir}/../../bundles/net.sdruskat.peppergrinder.rcp/doc/help/toc.xml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${maven-resources-plugin.version}</version>
            <executions>
              <!-- Copy the user doc PDF from src/main/resources/ to target/pandoc/pdf/ -->
              <execution>
                <id>copy-pdf</id>
               <!-- PHASE: GENERATE-RESOURCES -->
               <phase>generate-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.basedir}/../../features/net.sdruskat.peppergrinder.feature/rootfiles/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/main/resources</directory>
                      <includes>
                        <include>pepper-grinder-user-guide.pdf</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <!-- Filter developer documentation to temporary path, i.e., replace Maven variables in sources with actual values -->
              <execution>
                <id>replace-variables</id>
               <!-- PHASE: GENERATE-SOURCES -->
               <phase>generate-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/doxygen-generated/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/main/doxygen/</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <!-- Copy the user doc Eclipse Help files from target/docbkx/eclipse to plugins/o.c-t.Pepper Grinder/doc/help -->
              <!--<execution>
                <id>copy-eclipse-help</id> -->
                <!-- PHASE: COMPILE -->
                <!--<phase>compile</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/../../bundles/net.sdruskat.peppergrinder.rcp/doc/help/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}/docbkx/eclipse/</directory>
                      <excludes>
                        <exclude>plugin.xml</exclude>
                      </excludes>
                    </resource>
                  </resources>
                </configuration>
              </execution>-->
            </executions>
          </plugin>

          <!-- Generate HTML and Eclipse Help from pandoc-built DocBook-->
          <plugin>
            <groupId>com.agilejava.docbkx</groupId>
            <artifactId>docbkx-maven-plugin</artifactId>
            <version>${docbkx-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>generate-html</goal>
                  <goal>generate-eclipse</goal>
                </goals>
                <!-- PHASE: PROCESS-SOURCES -->
                <phase>process-sources</phase>
              </execution>
            </executions>
            <configuration>
              <sourceDirectory>src/main/docbook</sourceDirectory>
              <htmlStylesheet>css/style.css</htmlStylesheet>
              <postProcess>
                <copy todir="${project.build.directory}/docbkx/html/css">
                  <fileset dir="${basedir}/src/main/docbook/css/" includes="**/*.css"/>
                </copy>
              </postProcess>
              <chunkedOutput>true</chunkedOutput>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>
</project>
